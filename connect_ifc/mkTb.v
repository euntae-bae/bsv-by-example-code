//
// Generated by Bluespec Compiler, version 2022.01-29-gc526ff54 (build c526ff54)
//
// On Wed Aug  9 18:35:05 KST 2023
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTb(CLK,
	    RST_N);
  input  CLK;
  input  RST_N;

  // ports of submodule dut
  wire [31 : 0] dut$request_put, dut$response_get;
  wire dut$EN_request_put,
       dut$EN_response_get,
       dut$RDY_request_put,
       dut$RDY_response_get;

  // ports of submodule stimulus_gen
  wire [31 : 0] stimulus_gen$request_get, stimulus_gen$response_put;
  wire stimulus_gen$EN_request_get,
       stimulus_gen$EN_response_put,
       stimulus_gen$RDY_request_get,
       stimulus_gen$RDY_response_put;

  // submodule dut
  mkDut dut(.CLK(CLK),
	    .RST_N(RST_N),
	    .request_put(dut$request_put),
	    .EN_request_put(dut$EN_request_put),
	    .EN_response_get(dut$EN_response_get),
	    .RDY_request_put(dut$RDY_request_put),
	    .response_get(dut$response_get),
	    .RDY_response_get(dut$RDY_response_get));

  // submodule stimulus_gen
  mkStimulusGen stimulus_gen(.CLK(CLK),
			     .RST_N(RST_N),
			     .response_put(stimulus_gen$response_put),
			     .EN_request_get(stimulus_gen$EN_request_get),
			     .EN_response_put(stimulus_gen$EN_response_put),
			     .request_get(stimulus_gen$request_get),
			     .RDY_request_get(stimulus_gen$RDY_request_get),
			     .RDY_response_put(stimulus_gen$RDY_response_put));

  // submodule dut
  assign dut$request_put = stimulus_gen$request_get ;
  assign dut$EN_request_put =
	     stimulus_gen$RDY_request_get && dut$RDY_request_put ;
  assign dut$EN_response_get =
	     stimulus_gen$RDY_response_put && dut$RDY_response_get ;

  // submodule stimulus_gen
  assign stimulus_gen$response_put = dut$response_get ;
  assign stimulus_gen$EN_request_get =
	     stimulus_gen$RDY_request_get && dut$RDY_request_put ;
  assign stimulus_gen$EN_response_put =
	     stimulus_gen$RDY_response_put && dut$RDY_response_get ;
endmodule  // mkTb

